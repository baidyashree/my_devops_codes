DOCKERS INSTALLATION CONFIGURATIONS
===================================
35)  dockers => containers (in actual job you will be working on this). light weight....
VM machines limitations:
1) can not be ported easily
2) do not give full utilization of full h/w resource..
3) recent trends people are moving towards containers..
4) two edition - EE ( charchable), CE ( community edition is free)

36) install docker community-open source edition
=================================================
(https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-from-a-package)
1) apt-get install apt-transport-https ca-certificates curl software-properties-common -y // secure download
2)//download key  and add
wget https://download.docker.com/linux/ubuntu/gpg
check with "cat gpg" for the Key content. ( Optional) 
apt-key add gpg

3) find out the release
root@ubuntu:~# lsb_release -cs
xenial
root@ubuntu:~#

4)add repository into sources.lst
vi /etc/apt/sources.lst
add the following at the end of the file,

deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable

apt-get update -y

5) apt-get install docker -y  //install docker community edition
	apt-get install docker.io -y


6) docker --version

root@docker-server:~# docker --version
Docker version 17.09.1-ce, build 19e2cf6
root@docker-server:~#

7) sign up explore various images ( like redis, ubundu, ruby, phython..) on dockerhub...
https://hub.docker.com

8) docker health check
#docker run hello-world

check following message appears in output, then docker is working fine,

Hello from Docker!
This message shows that your installation appears to be working correctly.


9) pull some standard images from docker hub, some of these are popular images.
==============================================
docker pull ubuntu
docker pull fedora
docker pull debian
docker pull centos

10)  list of containers in the box
docker images

11) let us run some containers
===============================
docker run -ti ubuntu  // ti--> run it in terminal and interactive mode

----------------
root@docker-server:~# docker run -ti ubuntu
root@86599f34c664:/#

root@86599f34c664:/#  ==> this is prompt inside the container.
------------------

12) 
on docker image: 918 free 

root@86599f34c664:/# free -m
              total        used        free      shared  buff/cache   available
Mem:           1999         109         918           3         971        1693
Swap:          1023           0        1023
root@86599f34c664:/#

open one more putty connection to hosting hose, and check free image, here also 918 is free..
root@docker-server:~# free -m
              total        used        free      shared  buff/cache   available
Mem:           1999         109         918           3         971        1693
Swap:          1023           0        1023
root@docker-server:~#


also try top on both machine... it shows that container has full access to base machine..
its like shared resource things.. use the memoery as required..

KiB Mem :  2047868 total,   941960 free,   110852 used,   995056 buff/cache
KiB Swap:  1048572 total,  1048572 free,        0 used.  1735836 avail Mem

13) to check list of containers running,
docker ps -a 

root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
86599f34c664        ubuntu              "/bin/bash"         9 minutes ago       Up 9 minutes                                    jovial_ramanujan
9bd393516eaf        ubuntu              "/bin/bash"         9 minutes ago       Exited (0) 9 minutes ago                        nifty_boyd
76dd46890ccd        hello-world         "/hello"            28 minutes ago      Exited (0) 28 minutes ago                       sharp_varahamihira
8068fa821287        hello-world         "/hello"            29 minutes ago      Exited (0) 29 minutes ago                       loving_rosalind
root@docker-server:~#

14) let us install some pkg/customize and push to docker hub, so that other people can pull it,
run following in root@86599f34c664 ( container id)
1)apt-get update -y 
2)apt-get install vim nodejs apache2 -y   => install these packages on containers..
3)exit
4)
root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
86599f34c664        ubuntu              "/bin/bash"         25 minutes ago      Exited (0) 3 minutes ago                        jovial_ramanujan
9bd393516eaf        ubuntu              "/bin/bash"         26 minutes ago      Exited (0) 25 minutes ago                       nifty_boyd
76dd46890ccd        hello-world         "/hello"            45 minutes ago      Exited (0) 45 minutes ago                       sharp_varahamihira
8068fa821287        hello-world         "/hello"            45 minutes ago      Exited (0) 45 minutes ago                       loving_rosalind
root@docker-server:~#
5) Saving the status of the container,
docker commit -m "Changing the container" -a "Appar" 86599f34c664 appars/mycustomisedcontainer-v1

-----------
root@docker-server:~# docker commit -m "Changing the container" -a "Appar" 86599f34c664 appars/mycustomisedcontainer-v1
sha256:c6ea6ff67f03b691f2fe924d94716ff6e9bc115d2c613416c92d52fca05436c8
root@docker-server:~#
------------

6) Check the new images added,
docker images

root@docker-server:~# docker images
REPOSITORY                        TAG                 IMAGE ID            CREATED             SIZE
appars/mycustomisedcontainer-v1   latest              c6ea6ff67f03        8 minutes ago       310MB
ubuntu                            latest              00fd29ccc6f1        9 hours ago         111MB
debian                            latest              da653cee0545        3 days ago          100MB
centos                            latest              3fa822599e10        2 weeks ago         204MB
hello-world                       latest              f2a91732366c        3 weeks ago         1.85kB
fedora                            latest              422dc563ca32        4 weeks ago         252MB
root@docker-server:~#



7) now, let us put it into docker hub
docker login
appars/******

root@docker-server:~# docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: appars
Password:
Login Succeeded
root@docker-server:~#


8) docker info  // will give docker login info...

9) docker push appars/mycustomisedcontainer-v1
------------------
root@docker-server:~# docker push appars/mycustomisedcontainer-v1
The push refers to a repository [docker.io/appars/mycustomisedcontainer-v1]
8b40c5cd914a: Pushed
f17fc24fb8d0: Mounted from library/ubuntu
6458f770d435: Mounted from library/ubuntu
5a876f8f1a3d: Mounted from library/ubuntu
d2f8c05d353b: Mounted from library/ubuntu
48e0baf45d4d: Mounted from library/ubuntu
latest: digest: sha256:739609b84759017751fbd320204d34ad8d86ce09d5eecac35de2c3cfe6925784 size: 1569
root@docker-server:~#
-------------------
10) check in the browser thew new images appars/mycustomisedcontainer-v1 added.

11) now remove local containers and pull it from docker hub,
docker rmi appars/mycustomisedcontainer-v1
docker pull appars/mycustomisedcontainer-v1

---------------------------
root@docker-server:~# docker rmi appars/mycustomisedcontainer-v1
Untagged: appars/mycustomisedcontainer-v1:latest
Untagged: appars/mycustomisedcontainer-v1@sha256:739609b84759017751fbd320204d34ad8d86ce09d5eecac35de2c3cfe6925784
Deleted: sha256:c6ea6ff67f03b691f2fe924d94716ff6e9bc115d2c613416c92d52fca05436c8
Deleted: sha256:7c166715be3c617993ef062c95eefb2d7fc3fee09a9a7a01a61482f007ce1dbb
root@docker-server:~# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              00fd29ccc6f1        9 hours ago         111MB
debian              latest              da653cee0545        3 days ago          100MB
centos              latest              3fa822599e10        2 weeks ago         204MB
hello-world         latest              f2a91732366c        3 weeks ago         1.85kB
fedora              latest              422dc563ca32        4 weeks ago         252MB
root@docker-server:~# docker pull appars/mycustomisedcontainer-v1
Using default tag: latest
latest: Pulling from appars/mycustomisedcontainer-v1
50aff78429b1: Already exists
f6d82e297bce: Already exists
275abb2c8a6f: Already exists
9f15a39356d6: Already exists
fc0342a94c89: Already exists
fa655ef3384b: Pull complete
Digest: sha256:739609b84759017751fbd320204d34ad8d86ce09d5eecac35de2c3cfe6925784
Status: Downloaded newer image for appars/mycustomisedcontainer-v1:latest
root@docker-server:~#

root@docker-server:~# docker images
REPOSITORY                        TAG                 IMAGE ID            CREATED             SIZE
appars/mycustomisedcontainer-v1   latest              c6ea6ff67f03        40 minutes ago      310MB
ubuntu                            latest              00fd29ccc6f1        10 hours ago        111MB
debian                            latest              da653cee0545        3 days ago          100MB
centos                            latest              3fa822599e10        2 weeks ago         204MB
hello-world                       latest              f2a91732366c        3 weeks ago         1.85kB
fedora                            latest              422dc563ca32        4 weeks ago         252MB
root@docker-server:~#
// now images is pulled
----------------------------------

12) now, let us remove all the containers running,
docker ps -a

root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                         PORTS               NAMES
86599f34c664        ubuntu              "/bin/bash"         About an hour ago   Exited (0) About an hour ago                       jovial_ramanujan
9bd393516eaf        ubuntu              "/bin/bash"         About an hour ago   Exited (0) About an hour ago                       nifty_boyd
76dd46890ccd        hello-world         "/hello"            2 hours ago         Exited (0) 2 hours ago                             sharp_varahamihira
8068fa821287        hello-world         "/hello"            2 hours ago         Exited (0) 2 hours ago                             loving_rosalind
root@docker-server:~# docker rm 86599f34c664 9bd393516eaf 76dd46890ccd 8068fa821287
86599f34c664
9bd393516eaf
76dd46890ccd
8068fa821287
root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@docker-server:~#


13) let us run the containers, got it from docker hub,

---------------------
root@docker-server:~# docker run -ti appars/mycustomisedcontainer-v1
root@e68afb3b7a74:/# history  ==> previous histroy can be seen...
    1  free -m
    2  top
    3  ifconifg
    4  ifconfig
    5  clear
    6  ls
    7  pwd
    8  ls
    9  apt-get update -y
   10  apt-get install vim nodejs apache2 -y
   11  exit
   12  history

14) If you check from docker-server, 
root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE                             COMMAND             CREATED              STATUS              PORTS               NAMES
e68afb3b7a74        appars/mycustomisedcontainer-v1   "/bin/bash"         About a minute ago   Up About a minute                       nostalgic_neumann
root@docker-server:~#

15) to remove all containers running in signle go,
docker rm -f $(docker ps -aq)

16) to remove all images 
docker rmi -f $(docker images -aq) 
docker images
docker -ps -a
// now its like clean machine....

17) how to expose the port outside world.. for example, nginx has the port...
docker pull nginx
docker run -ti nginx => ifconfig/also browser also will work..whhen we run container, we need to expose the port.
how to we expose the port...
following command expose port 80 to base image port of 80 and then we can access from outside world..
docker run -ti -d -p 80:80 nginx
docker ps -a  => at base machine will show nginx is running..

now check in browser if its working fine.. at base machine <ip>

18) instead of fixed port.. its needs kill old container and run it again on 80:80.. 
so if we run with -P, it will automcaticlly give new port every time..this will be useful for devloper to test...
docker run -ti -d -P nginx ( i.e -P will give new port exery time)

****************************
root@docker-server:~# docker run -ti -d -p 80:80 nginx
14e0fc29bfd68a0a677709f248573abade8ed14c14f620ea4a3deb86057a6161
root@docker-server:~# docker run -ti -d -P nginx
28fa24f606e10fde72a22a32c1ca7ef993fde3aebc6677131c5ae46804185715
root@docker-server:~# docker run -ti -d -P nginx
1fd1090280588f3dd63db444e17004c0bd655f971c5cb1908ed9d9c060e13b4f
root@docker-server:~# docker run -ti -d -P nginx
e7a81527d5ac261731d27c265bee1f9b6894d938fafddf003f7ac63f5d56aeaa
root@docker-server:~# docker run -ti -d -P nginx
c434d004e5fb090cc566eb2eb81c785e3e38681a385fac9727f321c0929921a0
root@docker-server:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
c434d004e5fb        nginx               "nginx -g 'daemon ..."   6 seconds ago       Up 6 seconds        0.0.0.0:32771->80/tcp   optimistic_sinoussi
e7a81527d5ac        nginx               "nginx -g 'daemon ..."   8 seconds ago       Up 7 seconds        0.0.0.0:32770->80/tcp   dreamy_keller
1fd109028058        nginx               "nginx -g 'daemon ..."   9 seconds ago       Up 8 seconds        0.0.0.0:32769->80/tcp   festive_allen
28fa24f606e1        nginx               "nginx -g 'daemon ..."   10 seconds ago      Up 10 seconds       0.0.0.0:32768->80/tcp   nostalgic_stonebraker
95037031547a        nginx               "nginx -g 'daemon ..."   20 minutes ago      Up 20 minutes       0.0.0.0:80->80/tcp      tender_kepler
root@docker-server:~#

check in the browser... as follows..
http://192.168.0.3:32771/
http://192.168.0.3:32770

******************************************************************


S